import discord
import os 
from PIL import Image, ImageDraw, ImageFont
from image_processing.standard import scale, number
from global_vars import Food as FoodCats
from global_vars import Possession as PossessionCats

class Item: 
    def __init__(self, objId, price, image_file, image_url, info): 
        self.objId = objId
        self.price = price
        self.image_file = image_file
        self.image_url=image_url
        self.info = info
    
    def get_image(self, num=None):
        cwd = os.getcwd() + '/' 
        image = Image.open(cwd+self.image_file)
        image = scale(image)
        print(num)
        if num or num == 0: 
            image = number(image, num)
        return image
    
    def get_name(self): 
        return {
            FoodCats.BANANA: 'Banane',
            FoodCats.CORN_DOG: 'Corn Dog',
            FoodCats.HAMBURGER: 'Hamburger', 
            FoodCats.CRAZY_HAMBURGER: 'Crazy Hamburger',
            FoodCats.KEBAP: 'Kebap',
            FoodCats.HOTDOG: 'Hotdog',
            FoodCats.ROASTED_ALMONDS: 'Gebrannte Mandeln',
            FoodCats.CHILDREN_TEA: 'Kinder Punsch',
            FoodCats.BAKED_APPLE: 'Bratapfel',
            FoodCats.CANDIED_APPLE: 'Kandierter Apfel'
        }.get(self.objId, 'Penis')
    
    def get_info(self): 
        pass 


class Food(Item): 
    def __init__(self, objId, price, image_file, image_url, info, effectivity): 
        super().__init__(objId, price, image_file, image_url, info)
        self.effectivity = effectivity
        self.icon = 'üçî'
    
    def get_info(self): 
        embed=discord.Embed(color=0xffc800)
        embed.set_thumbnail(url=self.image_url)
        embed.add_field(name=self.get_name(), value=self.info, inline=False)
        embed.add_field(name="Effektivit√§t", value=self.effectivity, inline=True)
        embed.add_field(name="Preis", value=f'{self.price}$', inline=True)
        return embed


class Banana(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.BANANA,
            price=5, 
            image_file='food_images/banana.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783389781890433074/image.png',
            info='wohlschmeckende, l√§ngliche, gelbe Frucht einer baum√§hnlichen tropischen Staude',
            effectivity=5)
        self.name = 'Banane'

class Corndog(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.CORN_DOG,
            price=5, 
            image_file='food_images/corndog.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783389811301417050/image.png',
            info='Ein Corn Dog ist ein US-amerikanischer Imbiss. Er besteht aus einem W√ºrstchen, das von einer\nMaisteigh√ºlle umgeben ist und in hei√üem √ñl\nfrittiert wird.',
            effectivity=5)
        self.name = 'Corn Dog'

class Hamburger(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.HAMBURGER,
            price=5, 
            image_file='food_images/hamburger.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783389848890638376/image.png',
            info='Ein Hamburger ist ein weltweit verbreitetes Sandwich, das aus einem speziellen Br√∂tchen, dem Bun besteht, das mit verschiedenen Bel√§gen, haupts√§chlich jedoch einer gegrillten Scheibe aus Rinderhackfleisch, belegt wird.',
            effectivity=5)
        self.name = 'Hamburger'

class CrazyHamburger(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.CRAZY_HAMBURGER,
            price=1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 
            image_file='food_images/crazyhamburger.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783389780049264700/image.png',
            info='dasselbe wie ein hamburger aber crazy',
            effectivity=5000000000000000000000)
        self.name = 'Crazy Hamburger'

class Kebap(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.KEBAP,
            price=4.99, 
            image_file='food_images/kebap.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783391231098224640/image.png',
            info='Der D√∂ner Kebab, kurz D√∂ner, ist eines der\nbekanntesten Gerichte der t√ºrkischen K√ºche. Er ist dem griechischen Gyros √§hnlich. Es besteht aus mit Marinade gew√ºrzten Fleischscheiben, die schichtweise auf einen senkrecht stehenden Drehspie√ü gesteckt und seitlich gegrillt werden.',
            effectivity=5)
        self.name = 'Kebap'

class Hotdog(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.HOTDOG,
            price=8.99, 
            image_file='food_images/hotdog.jpg',
            image_url='https://cdn.discordapp.com/attachments/781530450577457193/783389813985378314/image.png',
            info='Der Hotdog ist ein Fast-Food-Gericht, das aus einer warmen Br√ºhwurst mit weiteren Zutaten in einem weichen Weizenbr√∂tchen besteht.',
            effectivity=5)
        self.name = 'Hotdog'

class RoastedAlmonds(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.ROASTED_ALMONDS,
            price=2.99,
            image_file='food_images/roastedalmonds.jpg',
            image_url='https://cdn.discordapp.com/attachments/768869575314898964/783454521774964746/image.png',
            info='Gebrannte Mandeln sind eine S√º√üware, die ‚Äì neben Zuckerwatte und Magenbrot ‚Äì besonders h√§ufig auf Jahrm√§rkten sowie Volksfesten (Kirmes) verkauft wird.',
            effectivity=10)
        self.name = 'Gebrannte Mandeln'

class ChildrenTea(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.CHILDREN_TEA,
            price=1.50, 
            image_file='food_images/childrentea.jpg',
            image_url='https://cdn.discordapp.com/attachments/783405443409379380/783463109024022568/image.png',
            info='Als Punsch (nach Hindi ‡§™‡§æ‡§Ç‡§ö pƒÅ√±ƒç ‚Äûf√ºnf‚Äú) wird ein alkoholisches, meist hei√ües Mischgetr√§nk bezeichnet, das urspr√ºnglich aus Indien stammt und aus f√ºnf Zutaten (daher der Name) besteht. Die traditionellen Zutaten sind Arrak, Zucker, Zitronen und Tee oder Wasser mit Gew√ºrzen.',
            effectivity=5)
        self.name = 'Kinderpunsch'

class BakedApple(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.BAKED_APPLE, 
            price=2, 
            image_file='food_images/bratapfel.jpg',
            image_url='https://cdn.discordapp.com/attachments/783405443409379380/783467560338849842/image.png',
            info='Brat√§pfel sind eine einfache S√º√üspeise aus im Ofen gebackenen √Ñpfeln. Sie werden traditionell im Winter zur Weihnachtszeit aus lagerf√§higen, festen und s√§uerlichen Apfelsorten wie Boskoop zubereitet.',
            effectivity=7)
        self.name = 'Bratapfel'

class CandiedApple(Food): 
    def __init__(self): 
        super().__init__(
            objId=FoodCats.CANDIED_APPLE, 
            price=2,
            image_file='food_images/kandierterapfel.jpg',
            image_url='https://cdn.gutekueche.de/upload/rezept/2217/kandierte-aepfel.jpg',
            info='Kandieren (auch Konfieren) ist eine Konservierungsmethode f√ºr frische, essbare Pflanzenteile (meist Fr√ºchte und Obst), bei denen der Zuckergehalt der Fr√ºchte auf mindestens 70 Prozent erh√∂ht und der Wassergehalt reduziert wird.',
            effectivity=6)
        self.name = 'kandierter Apfel'

    
class Possession(Item): 
    def __init__(self, objId, price, image_file, image_url, info, user_id):
        super().__init__(objId, price, image_file, image_url, info)
        self.user_id = user_id
        self.icon = 'üè†'

class House(Possession): 
    def __init__(self, item): 
        super().__init__(
            objId=PossessionCats.HOUSE,
            price=5,
            image_file='food_images/haus.jpg',
            image_url='https://www.hanse-haus.de/fileadmin/_processed_/7/b/csm_fertighaus-bauen-startseiten-bild_d13e0ec91d.jpg',
            info='Als Haus bezeichnet man ein Geb√§ude in der Regel, wenn dessen vorrangiger Zweck ist, Menschen regelm√§√üig als Unterkunft zu dienen, insbesondere zum Wohnen, Arbeiten oder f√ºr Zusammenk√ºnfte.',
            user_id=item.user_id.val)
        self.name = 'Haus'